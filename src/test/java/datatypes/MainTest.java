/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package datatypes;

import org.junit.Test;
import static org.junit.Assert.*;

/*
 * Problem 1
 * 
 * Design a module to handle hierarchical configuration
 * Eg: there may some default config, eg: timeout = 1000
 * there may be some prod specific config, eg: baseUrl = abc
 * there may be dev configs which inherits from prod, eg: baseUrl = xyz
 * like this there may be any number of levels (eg, local config)
 * 
 * We need to be able to set any config (dev / prod)
 * 
 * Then query a value, and it should return the proper value
 * as per the inheritance
 * Eg: 
 * if env = DEV
 *   query("baseUrl") -> xyz
 *   query("timeout") -> 1000
 * if env = PROD
 *   query("baseUrl") -> abc
 *   query("timeout") -> 1000
 * if no env set
 *   query("baseUrl") -> error
 *   query("timeout") -> 1000
 */

public class MainTest {
    @Test public void test() {
        fail();
    }
}
